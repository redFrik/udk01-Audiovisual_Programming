{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs40 \cf2 //udk may-jul 2009 / f@fredrikolofsson.com\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //090625\cf3 \
\
\
\cf2 //----------------------\cf3 \
\cf2 /*\
the Point class...\
Point(x, y)\
\
a= Point(100, 300)\
a+10\
a+Point(1, 2)\
a.x+1000\
a.y*2\
*/\cf3 \
\
\
(\
\cf4 var\cf3  win, usr;\
win= \cf4 Window\cf3 (\cf5 "lines"\cf3 , \cf4 Rect\cf3 (100, 200, 400, 400));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 400, 400));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	100.do\{\cf4 |i|\cf3 \
		\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (200, 200));\cf2 //move to middle screen\cf3 \
		\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (i*2, i*4));\cf2 //line to somewhere\cf3 \
	\};\
	\cf4 Pen\cf3 .stroke;\
\};\
win.front;\
)\
\
\
(\
\cf4 var\cf3  win, usr;\
win= \cf4 Window\cf3 (\cf5 "more lines"\cf3 , \cf4 Rect\cf3 (100, 200, 400, 400));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 400, 400));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	70.do\{\cf4 |i|\cf3 \
		\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (200, 200));\cf2 //move to middle screen\cf3 \
		\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (i*2, i*6));\cf2 //line to somewhere\cf3 \
		\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (100, 100));\
		\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (i*9, i*2));\
		\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (350, 350));\
		\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (i/5, i*7));\
	\};\
	\cf4 Pen\cf3 .stroke;\
\};\
win.front;\
)\
\
\
\
(\
\cf4 var\cf3  win, usr, width= 640, height= 480;\
win= \cf4 Window\cf3 (\cf5 "structured lines"\cf3 , \cf4 Rect\cf3 (100, 200, width, height));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, width, height));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	(width/2).do\{\cf4 |i|\cf3 \
		\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 (1.0.rand);\
		\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (width/2, height/2));\cf2 //move to middle screen\cf3 \
		\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (i*2, 20));\
		\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (width/2, height/2));\cf2 //move back to middle screen\cf3 \
		\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (i*2, height-20));\
		\cf4 Pen\cf3 .stroke;\
	\};\
\};\
win.front;\
)\
\
\
\cf2 //Pen.quadCurveTo(destionationPoint, controlPoint)\cf3 \
(\
\cf4 var\cf3  win, usr, width= 640, height= 480;\
win= \cf4 Window\cf3 (\cf5 "curve"\cf3 , \cf4 Rect\cf3 (100, 200, width, height));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, width, height));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (width/2, height/2));\
	\cf4 Pen\cf3 .quadCurveTo(\cf4 Point\cf3 (600, 10), \cf4 Point\cf3 (450, 50));\
	\cf4 Pen\cf3 .stroke;\
	\cf4 Pen\cf3 .strokeOval(\cf4 Rect\cf3 (width/2, height/2, 5, 5));\cf2 //start\cf3 \
	\cf4 Pen\cf3 .strokeOval(\cf4 Rect\cf3 (450, 50, 5, 5));\cf2 //control\cf3 \
	\cf4 Pen\cf3 .strokeOval(\cf4 Rect\cf3 (600, 10, 5, 5));\cf2 //destination\cf3 \
\};\
win.front;\
)\
\
\
(\
\cf4 var\cf3  win, usr, width= 640, height= 480;\
win= \cf4 Window\cf3 (\cf5 "more curve"\cf3 , \cf4 Rect\cf3 (100, 200, width, height));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, width, height));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	50.do\{\cf4 |i|\cf3 \
		\cf4 var\cf3  start, control, end;\
		start= \cf4 Point\cf3 (width/2, height/2);\
		control= \cf4 Point\cf3 (width.rand, height.rand);\
		end= \cf4 Point\cf3 (20, i/50*height);\
		\cf4 Pen\cf3 .moveTo(start);\
		\cf4 Pen\cf3 .quadCurveTo(end, control);\
		\cf4 Pen\cf3 .stroke;\
		\cf4 Pen\cf3 .strokeOval(\cf4 Rect\cf3 (control.x, control.y, 5, 5));\
	\};\
\};\
win.front;\
)\
\
\
\cf2 //even more curves and with colours\cf3 \
(\
\cf4 var\cf3  win, usr, width= 640, height= 480, n= 250;\
win= \cf4 Window\cf3 (\cf5 "even more curve"\cf3 , \cf4 Rect\cf3 (100, 200, width, height));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, width, height));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	n.do\{\cf4 |i|\cf3 \
		\cf4 var\cf3  start, control, end, col;\
		col= \cf4 Color\cf3 .grey(1-(i/n), 0.5);\
		\cf4 Pen\cf3 .strokeColor= col;\
		start= \cf4 Point\cf3 (width/2, height/2);\
		control= \cf4 Point\cf3 (width.rand.round(100), height.rand.round(50));\
		end= \cf4 Point\cf3 (20, i/n*height);\
		\cf4 Pen\cf3 .moveTo(start);\
		\cf4 Pen\cf3 .quadCurveTo(end, control);\
		\cf4 Pen\cf3 .stroke;\
		\cf4 Pen\cf3 .strokeOval(\cf4 Rect\cf3 (control.x, control.y, 5, 5));\
	\};\
\};\
win.front;\
)\
\
\
\
\
\cf2 //-------------------------\cf3 \
s.boot;\
(\
\cf4 SynthDef\cf3 (\cf5 "env"\cf3 , \{\
	\cf4 var\cf3  env, snd;\
	env= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(0.01, 0.5, curve:-4), doneAction:2);\
	snd= \cf4 SinOsc\cf3 .ar(500)*env;\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd));\
\}).send(s);\
)\
\
\cf4 Synth\cf3 (\cf5 "env"\cf3 )\
\
\cf4 Env\cf3 .perc(0.01, 0.5, curve:-4).plot\
\
\cf2 //doneAction:2 is almost like deallocation of synths\cf3 \
\cf2 //cleans up and stop the synth when envelope is finished (attacktime+releasetime)\cf3 \
\
\
\
\cf2 //same but with white noise\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "env2"\cf3 , \{\
	\cf4 var\cf3  env, snd;\
	env= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(0.01, 0.5, curve:-4), doneAction:2);\
	snd= \cf4 WhiteNoise\cf3 .ar(1)*env;\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd));\
\}).send(s);\
)\
\
\cf4 Synth\cf3 (\cf5 "env2"\cf3 )\
\
\
\
\cf2 //same envelope used for both amp and freq\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "env3"\cf3 , \{\
	\cf4 var\cf3  env, snd;\
	env= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(0.1, 0.9, curve:-4), doneAction:2);\
	snd= \cf4 SinOsc\cf3 .ar(500*env+500)*env;\cf2 //freq between 500 and 1000\cf3 \
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd));\
\}).send(s);\
)\
\
\cf4 Synth\cf3 (\cf5 "env3"\cf3 )\
\
\
\
\cf2 //same synthdef but with 4 arguments.  using arguments we can\cf3 \
\cf2 //control the synth parameters without changing the synthdef\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "env4"\cf3 , \{\cf4 |attack= 0.1, release= 0.9, c= -4, freq= 500|\cf3 \
	\cf4 var\cf3  env, snd;\
	env= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(attack, release, curve:c), doneAction:2);\
	snd= \cf4 SinOsc\cf3 .ar(freq*env+500, 0, 0.25)*env;\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd));\
\}).send(s);\
)\
\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 0.001, \cf6 \\release\cf3 , 1, \cf6 \\c\cf3 , -4, \cf6 \\freq\cf3 , 600])\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 0.4, \cf6 \\release\cf3 , 0.5, \cf6 \\c\cf3 , -4, \cf6 \\freq\cf3 , 900])\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 0.2, \cf6 \\release\cf3 , 0.1, \cf6 \\c\cf3 , -4, \cf6 \\freq\cf3 , 1500])\
\
\
\
\cf2 //--many different curves/envelopes at the same time\cf3 \
(\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.1, \cf6 \\release\cf3 , 3.0, \cf6 \\c\cf3 , -0.1, \cf6 \\freq\cf3 , 600]);\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.2, \cf6 \\release\cf3 , 2.9, \cf6 \\c\cf3 , -0.2, \cf6 \\freq\cf3 , 700]);\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.3, \cf6 \\release\cf3 , 2.8, \cf6 \\c\cf3 , -0.3, \cf6 \\freq\cf3 , 800]);\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.4, \cf6 \\release\cf3 , 2.7, \cf6 \\c\cf3 , -0.4, \cf6 \\freq\cf3 , 900]);\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.5, \cf6 \\release\cf3 , 2.6, \cf6 \\c\cf3 , -0.5, \cf6 \\freq\cf3 , 1000]);\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.6, \cf6 \\release\cf3 , 2.5, \cf6 \\c\cf3 , -0.6, \cf6 \\freq\cf3 , 1100]);\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.7, \cf6 \\release\cf3 , 2.4, \cf6 \\c\cf3 , -0.7, \cf6 \\freq\cf3 , 1200]);\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.8, \cf6 \\release\cf3 , 2.3, \cf6 \\c\cf3 , -0.8, \cf6 \\freq\cf3 , 1300]);\
\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.9, \cf6 \\release\cf3 , 2.2, \cf6 \\c\cf3 , -0.9, \cf6 \\freq\cf3 , 1400]);\
)\
\
\
\cf2 //exactly the same but makes the computer calculate arguments for us\cf3 \
(\
9.do\{\cf4 |i|\cf3 \
	\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.1+(i*0.1), \cf6 \\release\cf3 , 3-(i*0.1), \cf6 \\c\cf3 , -0.1+(i* -0.1), \cf6 \\freq\cf3 , 600+(i*100)]);\
\};\
)\
\
\
\cf2 //advanced...\cf3 \
\cf2 //start synths with a time delay between each\cf3 \
(\
\cf4 Routine\cf3 (\{\
	9.do\{\cf4 |i|\cf3 \
		\cf4 Synth\cf3 (\cf5 "env4"\cf3 , [\cf6 \\attack\cf3 , 2.1+(i*0.1), \cf6 \\release\cf3 , 3-(i*0.1), \cf6 \\c\cf3 , -0.1+(i* -0.1), 	\cf6 \\freq\cf3 , 600+(i*100)]);\
		1.wait;	\cf2 //1 second between each synth start\cf3 \
	\};\
\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\
\
\cf2 //a synthdef with 3 different envelopes inside\cf3 \
\cf2 //more control over the sound\cf3 \
\cf2 //note: use only 1 doneAction per synthdef.  usually on the amplitude control\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "env5"\cf3 , \{\cf4 |attack= 0.01, release= 0.5, c= -4, freq= 500|\cf3 \
	\cf4 var\cf3  env, env2, env3, snd;\
	env= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(attack, release, curve: c), doneAction:2);\cf2 //controls amp\cf3 \
	env2= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(0.5, 0.5, curve: 0));\cf2 //controls panning\cf3 \
	env3= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(0.2, 0.1, curve: -3));\cf2 //controls frequency\cf3 \
	snd= \cf4 SinOsc\cf3 .ar(freq*env3+500, \cf4 SinOsc\cf3 .ar(env2*200, 0, 2pi), env);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, env2*2-1));\cf2 //env2 is scaled from (0 to 1) to (-1 to 1)\cf3 \
\}).send(s);\
)\
\
\cf4 Synth\cf3 (\cf5 "env5"\cf3 )\
\cf4 Synth\cf3 (\cf5 "env5"\cf3 , [\cf6 \\attack\cf3 , 0.1, \cf6 \\release\cf3 , 0.7, \cf6 \\c\cf3 , -6, \cf6 \\freq\cf3 , 800])\
\cf4 Synth\cf3 (\cf5 "env5"\cf3 , [\cf6 \\attack\cf3 , 0.02, \cf6 \\release\cf3 , 0.17, \cf6 \\c\cf3 , -3, \cf6 \\freq\cf3 , 1800])\
\cf4 Synth\cf3 (\cf5 "env5"\cf3 , [\cf6 \\attack\cf3 , 0.01, \cf6 \\release\cf3 , 0.17, \cf6 \\c\cf3 , 7, \cf6 \\freq\cf3 , 2800])\
\cf4 Synth\cf3 (\cf5 "env5"\cf3 , [\cf6 \\attack\cf3 , 1, \cf6 \\release\cf3 , 0.2, \cf6 \\c\cf3 , 0, \cf6 \\freq\cf3 , 10])\
\
\
\
\cf2 //more simple again.  phase modulation with 2 envelopes.\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "env6"\cf3 , \{\cf4 |atk= 0.01, rel= 0.3, freq= 500, mod= 0, matk= 0.03|\cf3 \
	\cf4 var\cf3  env, env2, snd;\
	env= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(atk, rel), doneAction:2);\
	env2= \cf4 EnvGen\cf3 .ar(\cf4 Env\cf3 .perc(matk, 0.06));\
	snd= \cf4 SinOsc\cf3 .ar(0, \cf4 SinOsc\cf3 .ar(freq, 0, 2pi*env2*mod+1), env);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd));\
\}).send(s);\
)\
\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 500])\
\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 700])\
\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 80, \cf6 \\mod\cf3 , 1])\
\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 180, \cf6 \\mod\cf3 , 3, \cf6 \\matk\cf3 , 0.4])\
\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 120, \cf6 \\mod\cf3 , 13, \cf6 \\matk\cf3 , 0.1])\
\
\
\cf2 //little arpeggiator...\cf3 \
(\
\cf4 Routine\cf3 (\{\
	4.do\{\cf4 |x|\cf3 		\cf2 //play 4 bars\cf3 \
		8.do\{\cf4 |y|\cf3 	\cf2 //8 notes per bar\cf3 \
			\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 200+(y*100)+(x*100), \cf6 \\matk\cf3 , y/8, \cf6 \\mod\cf3 , x, \cf6 \\rel\cf3 , y/8*0.2]);\
			0.1.wait;		\cf2 //note duration\cf3 \
		\};\
	\};\
\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\cf2 //little sequencer... (stop with cmd+.)\cf3 \
(\
\cf4 Routine\cf3 (\{\
	\cf4 inf\cf3 .do\{\cf4 |x|\cf3 \
		if(x%16==4, \{\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , x%5*100+200, \cf6 \\rel\cf3 , 2, \cf6 \\mod\cf3 , 0, \cf6 \\matk\cf3 , 0.01])\});\
		if(x%8==0, \{\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 80, \cf6 \\atk\cf3 , 0.005, \cf6 \\rel\cf3 , 0.1, \cf6 \\mod\cf3 , 1, \cf6 \\matk\cf3 , 0.01])\});\
		if(x%8==0 or:\{x%6==0\}, \{\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 1800, \cf6 \\atk\cf3 , 0.01, \cf6 \\rel\cf3 , 0.05, \cf6 \\mod\cf3 , 50, \cf6 \\matk\cf3 , 0.01])\});\
		0.04.wait;	\cf2 //note duration\cf3 \
	\};\
\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\
\cf2 //-----------------\cf3 \
(\
\cf4 var\cf3  win, usr, cnt= 0, width= 500, height= 500;\
win= \cf4 Window\cf3 (\cf5 "linenv"\cf3 , \cf4 Rect\cf3 (200, 200, width, height));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, width, height));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (width/2, height/2));\
	\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (cnt*10%width, 100));\
	\cf4 Pen\cf3 .stroke;\
	cnt= cnt+1;\
\};\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; 0.5.wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\
\
(\
\cf4 var\cf3  win, usr, cnt= 0, width= 500, height= 500;\
win= \cf4 Window\cf3 (\cf5 "linenv2"\cf3 , \cf4 Rect\cf3 (200, 200, width, height));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, width, height));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .fillColor= \cf4 Color\cf3 .grey;\
	\
	\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 .red;\
	if(cnt%8==0, \{\
		\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 120]);\
		\cf4 Pen\cf3 .strokeOval(\cf4 Rect\cf3 .aboutPoint(\cf4 Point\cf3 (25, 100), 40, 40));\
		\cf4 Pen\cf3 .fillOval(\cf4 Rect\cf3 .aboutPoint(\cf4 Point\cf3 (25, 100), 20, 20));\
	\});\
	\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (width/2, height/2));\
	\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (cnt%8*80+25, 100));\
	\cf4 Pen\cf3 .stroke;\
	\
	\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 .green;\
	if(cnt%12==0, \{\
		\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 440]);\
		\cf4 Pen\cf3 .strokeOval(\cf4 Rect\cf3 .aboutPoint(\cf4 Point\cf3 (25, 180), 40, 40));\
		\cf4 Pen\cf3 .fillOval(\cf4 Rect\cf3 .aboutPoint(\cf4 Point\cf3 (25, 180), 20, 20));\
	\});\
	\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (width/2, height/2));\
	\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (cnt%12*80+25, 180));\
	\cf4 Pen\cf3 .stroke;\
	\
	\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 .blue;\
	if(cnt%5==0, \{\
		\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , 900]);\
		\cf4 Pen\cf3 .strokeOval(\cf4 Rect\cf3 .aboutPoint(\cf4 Point\cf3 (25, 360), 40, 40));\
		\cf4 Pen\cf3 .fillOval(\cf4 Rect\cf3 .aboutPoint(\cf4 Point\cf3 (25, 360), 20, 20));\
	\});\
	\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (width/2, height/2));\
	\cf4 Pen\cf3 .lineTo(\cf4 Point\cf3 (cnt%5*80+25, 360));\
	\cf4 Pen\cf3 .stroke;\
	\
	cnt= cnt+1;\
\};\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; 0.25.wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\
\cf2 //-------------------\cf3 \
(\
\cf4 var\cf3  win, usr, cnt= 0, width= 500, height= 500, control, step;\
win= \cf4 Window\cf3 (\cf5 "curvenv"\cf3 , \cf4 Rect\cf3 (200, 200, width, height));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, width, height));\
usr.background= \cf4 Color\cf3 .white;\
control= \cf4 Point\cf3 (width/2, 0);\
step= 10;\
usr.drawFunc= \{\
	\
	if(cnt%32==0, \{\
		step= 50.rand;\
		\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , step*25+180, \cf6 \\mod\cf3 , step, \cf6 \\matk\cf3 , 0.1, \cf6 \\rel\cf3 , 1]);\
		control= \cf4 Point\cf3 (width/2, 0);\
	\});\
	if(cnt%32==16, \{\
		step= 0-50.rand;		\cf2 //step becomes negative\cf3 \
		\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , step*25+180, \cf6 \\mod\cf3 , step, \cf6 \\matk\cf3 , 0.1, \cf6 \\rel\cf3 , 1]);\
	\});\
	\cf4 Pen\cf3 .width= step;\
	\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (20, height/2));\
	\cf4 Pen\cf3 .quadCurveTo(\cf4 Point\cf3 (width-20, height/2), control*0.5);\
	\cf4 Pen\cf3 .stroke;\
	\
	cnt= cnt+1;\
	control= \cf4 Point\cf3 (control.x, control.y+step);\
\};\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/40).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\cf2 //each curve has a unique sound connected to it\cf3 \
(\
\cf4 var\cf3  win, usr, cnt= 0, width= 500, height= 500;\
win= \cf4 Window\cf3 (\cf5 "curvenv2"\cf3 , \cf4 Rect\cf3 (200, 200, width, height));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, width, height));\
usr.background= \cf4 Color\cf3 .white;\
usr.drawFunc= \{\
	\cf4 var\cf3  freq= cnt*50%2000+80;	\cf2 //80.rrand(2000)\cf3 \
	\cf4 var\cf3  atk= cnt*0.1%0.25; 		\cf2 //0.0.rrand(0.25)\cf3 \
	\cf4 var\cf3  rel= 	cnt*0.05%0.6+0.01;\cf2 //0.01.rrand(0.6)\cf3 \
	\cf4 var\cf3  matk= cnt*0.06%3;		\cf2 //0.0.rrand(3)\cf3 \
	\cf4 var\cf3  mod= cnt*0.5%10;			\cf2 //0.0.rrand(10)\cf3 \
	\cf4 Synth\cf3 (\cf5 "env6"\cf3 , [\cf6 \\freq\cf3 , freq, \cf6 \\atk\cf3 , atk, \cf6 \\rel\cf3 , rel, \cf6 \\matk\cf3 , matk, \cf6 \\mod\cf3 , mod]);\
	\cf4 Pen\cf3 .moveTo(\cf4 Point\cf3 (atk.linlin(0, 0.25, 0, width), freq.linlin(80, 2080, 0, height)));\
	\cf4 Pen\cf3 .quadCurveTo(\cf4 Point\cf3 (rel.linlin(0.01, 0.61, 0, width), matk.linlin(0, 3, 0, height)), \cf4 Point\cf3 (mod.linlin(0, 10, 0, width), height/2));\
	\cf4 Pen\cf3 .stroke;\
	cnt= cnt+1;\
\};\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/10).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\cf2 //17th-19th (fri-sun) show sketches/pieces\cf3 \
\cf2 //make document with comment with your name\cf3 \
\cf2 //make it start with selectAll+enter\cf3 \
\
\cf2 //saturday (july 4th) at 11:00 - 3 day workshop: network programming with julian\cf3 \
}
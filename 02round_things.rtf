{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs40 \cf2 //udk may-jul 2009 / f@fredrikolofsson.com\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //090618\cf3 \
\
\
\cf2 //----------------------\cf3 \
\cf2 //typing warm-up exercise...\cf3 \
\
\
\cf2 //animation of 6 ovals at random position\cf3 \
(\
\cf4 var\cf3  win, usr, cnt;\
win= \cf4 Window\cf3 (\cf5 "circ"\cf3 , \cf4 Rect\cf3 (100, 200, 500, 500));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 500, 500));\
usr.background= \cf4 Color\cf3 .white;\
\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 (1.0.rand, 0.4.rand, 0.5.rand);\
	6.do\{\
		\cf4 Pen\cf3 .addOval(\cf4 Rect\cf3 (200.rand, 200.rand, 150.rand, 150.rand));\
	\};\
	\cf4 Pen\cf3 .stroke;\
\};\
\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
500.rand		\cf2 //random values between 0 and 499 (integer)\cf3 \
0.7.rand		\cf2 //random values betweel 0 and 0.7 (float)\cf3 \
\
80.do\{100.rand.postln\}	\cf2 //do something 80 times\cf3 \
a= 0; 7.do\{a= a+1\}; a.postln;\cf2 //increase 'a' 7 times\cf3 \
\
\
\
\cf2 //radians...\cf3 \
0 radians = 0\
1 radians \uc0\u8776  6.28... = 2pi\
\
0.5pi\
1pi\
1.5pi\
2pi\
\
\
\cf2 //sin and cos...\cf3 \
sin(phase)	\cf2 //output values between -1.0 and 1.0 as phase goes from 0 to 2pi\cf3 \
\
sin(0)	 \cf2 //= 0				//beginning of circle (right hand side, y= 0)\cf3 \
sin(0.5pi)	 \cf2 //= 1		//spinning anti-clock wise to top of circle (y= 1)\cf3 \
sin(1pi)	 \cf2 //= 0			//half way (left hand side, y= 0)\cf3 \
sin(1.5pi)	\cf2 //= -1		//bottom of circle (y= -1)\cf3 \
\
\
\cf2 //sin control x position\cf3 \
(\
\cf4 var\cf3  win, usr, cnt;\
win= \cf4 Window\cf3 (\cf5 "circ2"\cf3 , \cf4 Rect\cf3 (100, 200, 500, 500));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 500, 500));\
usr.background= \cf4 Color\cf3 .white;\
\
cnt= 0;\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 .red;\
	\
	\cf4 Pen\cf3 .addOval(\cf4 Rect\cf3 (sin(cnt/50)*75+150, 150, 30, 30));\
	\cf4 Pen\cf3 .line(\cf4 Point\cf3 (150, 150), \cf4 Point\cf3 (150, sin(cnt/50)*75+150));\
	cnt= cnt+1;\
	\
	\cf4 Pen\cf3 .stroke;\
\};\
\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\cf2 //cos to control y and we get a circle\cf3 \
(\
\cf4 var\cf3  win, usr, cnt;\
win= \cf4 Window\cf3 (\cf5 "circ3"\cf3 , \cf4 Rect\cf3 (100, 200, 500, 500));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 500, 500));\
usr.background= \cf4 Color\cf3 .white;\
\
cnt= 0;\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 (1.0.rand, 0.4.rand, 0.5.rand);\
	\
	\cf4 Pen\cf3 .addOval(\cf4 Rect\cf3 (sin(cnt/50)*75+150, cos(cnt/50)*75+150, 30, 30));\
	\cf4 Pen\cf3 .line(\cf4 Point\cf3 (150, 150), \cf4 Point\cf3 (150, sin(cnt/50)*75+150));\
	cnt= cnt+1;\
	\
	\cf4 Pen\cf3 .stroke;\
\};\
\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\cf2 //iteration in sc...\cf3 \
8.do\{\cf4 |x|\cf3  ((x*100)+500).postln\}\cf2 //post values from 500 to 1200\cf3 \
3.do\{\cf4 |x|\cf3  ((x*0.5)+2).postln\}\cf2 //post values from 2 to 3 in 0.5 steps\cf3 \
\
\
\
\cf2 //many circles with different phase offset (x is circle index 0-39)\cf3 \
(\
\cf4 var\cf3  win, usr, cnt, phase;\
win= \cf4 Window\cf3 (\cf5 "circ4"\cf3 , \cf4 Rect\cf3 (100, 200, 500, 500));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 500, 500));\
usr.background= \cf4 Color\cf3 .white;\
\
cnt= 0;\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .width= 2;\
	\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 .black;\
	\
	phase= cnt/30;	\cf2 //radians (0 to 2pi)\cf3 \
	40.do\{\cf4 |x|\cf3 \
		\cf4 Pen\cf3 .addOval(\cf4 Rect\cf3 (sin(phase+(x*0.1))*75+150, cos(phase+(x*0.4))*50+150, x*5+50, x*10+10));\
	\};\
	\cf4 Pen\cf3 .stroke;\
	cnt= cnt+1;\
\};\
\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\cf2 //\cf3 \
(\
\cf4 var\cf3  win, usr, cnt, phase;\
win= \cf4 Window\cf3 (\cf5 "circ5"\cf3 , \cf4 Rect\cf3 (100, 200, 500, 500));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 500, 500));\
usr.background= \cf4 Color\cf3 .white;\
\
cnt= 0;\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .width= 2;\
	\
	phase= cnt/30;	\cf2 //radians (0 to 2pi)\cf3 \
	40.do\{\cf4 |x|\cf3 \
		\cf4 Pen\cf3 .fillColor= \cf4 Color\cf3 .grey(1-(x/40), 0.1);\
		\cf4 Pen\cf3 .addOval(\cf4 Rect\cf3 (sin(phase+(x*0.1))*75+150, cos(phase+(x*0.4))*50+150, x*5+50, x*10+10));\
		\cf4 Pen\cf3 .fill;\
	\};\
	cnt= cnt+1;\
\};\
\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\
\
\
\
\cf2 //----------------------\cf3 \
\cf2 //sound\cf3 \
s.boot\
(\
\cf2 //sine oscillator\cf3 \
\cf4 SynthDef\cf3 (\cf5 "sine1"\cf3 , 	\{\cf4 |freq= 500, amp= 0.5|\cf3 \
	\cf4 var\cf3  snd;\
	snd= \cf4 SinOsc\cf3 .ar(freq, 0, amp);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, 0));\
\}).send(s);\
)\
\
\cf2 //create 3 synths from the same synth definition\cf3 \
\cf4 Synth\cf3 (\cf5 "sine1"\cf3 , [\cf6 \\freq\cf3 , 700])\
\cf4 Synth\cf3 (\cf5 "sine1"\cf3 , [\cf6 \\freq\cf3 , 200])\
\cf4 Synth\cf3 (\cf5 "sine1"\cf3 , [\cf6 \\freq\cf3 , 600])\
\cf2 //stop with cmd+. (alt+. on windows)\cf3 \
\
\cf2 //\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "sine2"\cf3 , 	\{\cf4 |freq= 500, amp= 0.5, ampRate= 0.1|\cf3 \
	\cf4 var\cf3  snd;\
	snd= \cf4 SinOsc\cf3 .ar(freq, 0, amp*\cf4 SinOsc\cf3 .ar(ampRate, 0, 1));\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, 0));\
\}).send(s);\
)\
\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 220])\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 440])\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 880])\
\
(\
8.do\{\cf4 |x|\cf3 \
	\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , x*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , x*1.2+0.1]);\
\};\
)\
\
\cf2 //same as typing...\cf3 \
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 0*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , 0*2+0.1]);\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 1*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , 1*2+0.1]);\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 2*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , 2*2+0.1]);\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 3*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , 3*2+0.1]);\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 4*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , 4*2+0.1]);\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 5*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , 5*2+0.1]);\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 6*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , 6*2+0.1]);\
\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , 7*100+400, \cf6 \\amp\cf3 , 0.1, \cf6 \\ampRate\cf3 , 7*2+0.1]);\
\
\
\cf2 //many more synths.  look out for amplitude (1/80) and frequency (keep below half samplingrate (22050))\cf3 \
(\
80.do\{\cf4 |x|\cf3 \
	\cf4 Synth\cf3 (\cf5 "sine2"\cf3 , [\cf6 \\freq\cf3 , x*100+400, \cf6 \\amp\cf3 , 1/80, \cf6 \\ampRate\cf3 , x*0.1+0.1]);\
\};\
)\
\
\
\
\cf2 //a new\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "sine3"\cf3 , \{\cf4 |freq= 600, amp= 0.1, pan= 0|\cf3 \
	\cf4 var\cf3  snd;\
	snd= \cf4 SinOsc\cf3 .ar(freq, 0, amp);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, pan));\
\}).send(s);\
)\
\
\cf2 //a synth with freq 500 left speaker\cf3 \
\cf2 //a synth with freq 770 in right speaker\cf3 \
\cf2 //a synth with freq 900 in the middle\cf3 \
\cf4 Synth\cf3 (\cf5 "sine3"\cf3 , [\cf6 \\freq\cf3 , 500, \cf6 \\amp\cf3 , 0.3, \cf6 \\pan\cf3 , -1]);\
\cf4 Synth\cf3 (\cf5 "sine3"\cf3 , [\cf6 \\freq\cf3 , 770, \cf6 \\amp\cf3 , 0.3, \cf6 \\pan\cf3 , 1]);\
\cf4 Synth\cf3 (\cf5 "sine3"\cf3 , [\cf6 \\freq\cf3 , 900, \cf6 \\amp\cf3 , 0.3, \cf6 \\pan\cf3 , 0]);\
\
\cf2 //and same thing written using variables and .set messages\cf3 \
a= \cf4 Synth\cf3 (\cf5 "sine3"\cf3 )\
a.set(\cf6 \\freq\cf3 , 500)\
a.set(\cf6 \\pan\cf3 , -1)\
b= \cf4 Synth\cf3 (\cf5 "sine3"\cf3 )\
b.set(\cf6 \\freq\cf3 , 770)\
b.set(\cf6 \\pan\cf3 , 1)\
c= \cf4 Synth\cf3 (\cf5 "sine3"\cf3 )\
c.set(\cf6 \\freq\cf3 , 900)\
c.set(\cf6 \\pan\cf3 , 0)\
a.free\
b.free\
c.free\
\
\
\cf2 //making arrays with .dup.  here 20 random values between 0-100\cf3 \
\{100.rand\}.dup(20)\
\
\
\cf2 //create many synths and save in one array\cf3 \
a= \{\cf4 Synth\cf3 (\cf5 "sine3"\cf3 , [\cf6 \\freq\cf3 , 1000.rand, \cf6 \\amp\cf3 , 1/40])\}.dup(40);\
\
\cf2 //access single synths in the array...\cf3 \
a[31].set(\cf6 \\freq\cf3 , 2000)\
a[31].free\
\
a.do\{\cf4 |x|\cf3  x.free\}	\cf2 //stop all synths\cf3 \
\
\
\
\
\cf2 //---------------------\cf3 \
\{\cf4 |x|\cf3  x%20\}.dup(100)	\cf2 //modulo\cf3 \
\
\cf2 //controlling sound from the graphic\cf3 \
(\
\cf4 var\cf3  win, usr, cnt;\
win= \cf4 Window\cf3 (\cf5 "circ"\cf3 , \cf4 Rect\cf3 (100, 200, 500, 500));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 500, 500));\
usr.background= \cf4 Color\cf3 .white;\
\
a= \{\cf4 Synth\cf3 (\cf5 "sine3"\cf3 )\}.dup(1);\
cnt= 0;\
usr.drawFunc= \{\
	\cf4 var\cf3  amp= 0;\
	amp= cnt%100/100;		\cf2 //keep amp between 0 and 1\cf3 \
	a[0].set(\cf6 \\amp\cf3 , amp);\
	\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 (1, 0, 0);\
	\cf4 Pen\cf3 .addOval(\cf4 Rect\cf3 (200, 200, amp*200, amp*200));\
	\cf4 Pen\cf3 .stroke;\
	cnt= cnt+1;\
\};\
\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\
\
\cf2 //--\cf3 \
(\
\cf4 var\cf3  win, usr, cnt;\
win= \cf4 Window\cf3 (\cf5 "circ"\cf3 , \cf4 Rect\cf3 (100, 200, 500, 500));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 500, 500));\
usr.background= \cf4 Color\cf3 .white;\
\
a= \{\cf4 Synth\cf3 (\cf5 "sine3"\cf3 , [\cf6 \\amp\cf3 , 0])\}.dup(30);\
cnt= 0;\
usr.drawFunc= \{\
	30.do\{\cf4 |x|\cf3 \
		\cf4 var\cf3  amp= amp= cnt%100/100;\cf2 //keep amp between 0 and 1\cf3 \
		\cf4 var\cf3  posX= x*15+10;\
		\cf4 var\cf3  posY= sin(cnt%80/80*2pi+(x/10))*150+200;\
		a[x].set(\cf6 \\amp\cf3 , amp/30, \cf6 \\freq\cf3 , posY*10+100, \cf6 \\pan\cf3 , (x/30)*2-1);\
		\cf4 Pen\cf3 .strokeColor= \cf4 Color\cf3 (1-amp, 1-amp, 1-amp);\
		\cf4 Pen\cf3 .addOval(\cf4 Rect\cf3 (posX, posY, amp*20, amp*20));\
		\cf4 Pen\cf3 .stroke;\
	\};\
	cnt= cnt+1;\
\};\
\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\
\
\cf2 //------------------\cf3 \
\cf2 //sound setup...\cf3 \
s.boot\
(\
\cf4 SynthDef\cf3 (\cf5 "sine4"\cf3 , \{\cf4 |freq= 900, amp= 0.1, freq2= 2, amp2= 20, pan= 0|\cf3 \
	\cf4 var\cf3  snd;\
	snd= \cf4 SinOsc\cf3 .ar(freq+\cf4 SinOsc\cf3 .ar(freq2, 0, amp2), 0, amp);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, pan));\
\}).send(s);\
)\
a= \cf4 Synth\cf3 (\cf5 "sine4"\cf3 )\
a.set(\cf6 \\freq\cf3 , 600)\
a.set(\cf6 \\freq2\cf3 , 0.4)		\cf2 //speed of frequency modulation\cf3 \
a.set(\cf6 \\amp2\cf3 , 100)		\cf2 //depth of frequency modulation\cf3 \
a.free\
\
\
(\
\cf2 //graphic setup...\cf3 \
\cf4 var\cf3  win, usr, cnt, syn, updown, size;\
win= \cf4 Window\cf3 (\cf5 "simple again"\cf3 , \cf4 Rect\cf3 (100, 100, 640, 480));\
win.front;\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 640, 480));\
usr.background= \cf4 Color\cf3 .black;\
\
\cf2 //sound...\cf3 \
syn= \cf4 Synth\cf3 (\cf5 "sine4"\cf3 );\
\
\cf2 //draw...\cf3 \
cnt= 0;\
usr.drawFunc= \{\
	updown= sin(cnt/1000 + (sin(cnt/400)*20))*0.5;	\cf2 //phase should go from 0 to 2pi\cf3 \
	size= sin(cnt/80);\
	\cf4 Pen\cf3 .fillColor= \cf4 Color\cf3 .grey(0.9);\
	\cf4 Pen\cf3 .fillOval(\cf4 Rect\cf3 (cnt%640, 480*(updown*0.5+0.5), (size*0.5+0.5)*50, (size*0.5+0.5)*50));\
	syn.set(\cf6 \\pan\cf3 , ((cnt%640/640)*2-1).postln);	syn.set(\cf6 \\freq\cf3 , (updown* -0.5+0.5)*200+400);\
	syn.set(\cf6 \\amp\cf3 , (size*0.5+0.5));\
	cnt= cnt+10;\
\};\
\
\cf2 //animate...\cf3 \
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
updown						\cf2 //gives values between -1 and 1\cf3 \
(updown*0.5+0.5)		\cf2 //gives values between 0 and 1\cf3 \
\
\
\
\
\
(\
\cf2 //graphic setup...\cf3 \
\cf4 var\cf3  win, usr, cnt, syn, updown, size;\
win= \cf4 Window\cf3 (\cf5 "simple again"\cf3 , \cf4 Rect\cf3 (100, 100, 640, 480));\
win.front;\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 640, 480));\
usr.background= \cf4 Color\cf3 .black;\
\
\cf2 //sound...\cf3 \
syn= \{\cf4 Synth\cf3 (\cf5 "sine4"\cf3 , [\cf6 \\amp\cf3 , 0])\}.dup(20);\
\
\cf2 //draw...\cf3 \
cnt= 0;\
usr.drawFunc= \{\
	20.do\{\cf4 |x|\cf3 		\cf2 //x is counting 0 to 19\cf3 \
		updown= sin(cnt/100+(x*0.2));\
		size= sin(cnt/80+(x*0.1));\
		\cf4 Pen\cf3 .fillColor= \cf4 Color\cf3 .grey(0.9);\
		\cf4 Pen\cf3 .fillOval(\cf4 Rect\cf3 (cnt+(x*20)%640, 480*(updown*0.5+0.5), (size*0.5+0.5)*50, (size*0.5+0.5)*50));\
		syn[x].set(\cf6 \\pan\cf3 , ((cnt%640/640)*2-1));		syn[x].set(\cf6 \\freq\cf3 , (updown* -0.5+0.5)*200+400);\
		syn[x].set(\cf6 \\amp\cf3 , (size*0.5+0.5));\
	\};\
	cnt= cnt+4;	\cf2 //overall speed\cf3 \
\};\
\
\cf2 //animate...\cf3 \
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
\
\
\
\
\
\cf2 //-----------------------\cf3 \
\cf2 //sine5 separate sines on separate channels - no beating\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "sine5"\cf3 , \{\cf4 |freq= 400, detune= 1|\cf3 \
	\cf4 var\cf3  snd, snd2;\
	snd= \cf4 SinOsc\cf3 .ar(freq, 0, 0.1);\
	snd2= \cf4 SinOsc\cf3 .ar(freq+detune, 0, 0.1);\
	\cf4 Out\cf3 .ar(0, snd);\
	\cf4 Out\cf3 .ar(1, snd2);\
\}).send(s);\
)\
\
\cf4 Synth\cf3 (\cf5 "sine5"\cf3 )\
\
\
\cf2 //sine6 is mixing 2 sines - beating happens\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "sine6"\cf3 , \{\cf4 |freq= 400, detune= 1|\cf3 \
	\cf4 var\cf3  snd, snd2;\
	snd= \cf4 SinOsc\cf3 .ar(freq, 0, 0.1);\
	snd2= \cf4 SinOsc\cf3 .ar(freq+detune, 0, 0.1);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd+snd2, 0));\
\}).send(s);\
)\
\
a= \cf4 Synth\cf3 (\cf5 "sine6"\cf3 )\
a.set(\cf6 \\detune\cf3 , 2)\
a.set(\cf6 \\detune\cf3 , 20)\
a.set(\cf6 \\detune\cf3 , 0.5)\
a.free\
\
\
\cf2 //sine7 uses phase modulation\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "sine7"\cf3 , \{\cf4 |freq= 680, phaseFreq= 500|\cf3 \
	\cf4 var\cf3  snd, snd2;\
	snd2= \cf4 SinOsc\cf3 .ar(phaseFreq)*2pi;\
	snd= \cf4 SinOsc\cf3 .ar(freq, snd2, 0.5);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, 0));\
\}).send(s);\
)\
\
a= \cf4 Synth\cf3 (\cf5 "sine7"\cf3 );\
a.set(\cf6 \\phaseFreq\cf3 , 100)\
a.set(\cf6 \\phaseFreq\cf3 , 1000)\
a.set(\cf6 \\phaseFreq\cf3 , 50)\
a.free\
\
\
\cf2 //sine8 - connect modulators in parallel\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "sine8"\cf3 , \{\cf4 |freq= 680, phaseFreq= 500|\cf3 \
	\cf4 var\cf3  snd, snd2, snd3, snd4;\
	snd4= \cf4 SinOsc\cf3 .ar(phaseFreq+3)*2pi;\
	snd3= \cf4 SinOsc\cf3 .ar(phaseFreq+2)*2pi;\
	snd2= \cf4 SinOsc\cf3 .ar(phaseFreq+1)*2pi;\
	snd= \cf4 SinOsc\cf3 .ar(freq, snd2+snd3+snd4, 0.5);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, 0));\
\}).send(s);\
)\
\
a= \cf4 Synth\cf3 (\cf5 "sine8"\cf3 )\
a.set(\cf6 \\phaseFreq\cf3 , 50)\
a.set(\cf6 \\phaseFreq\cf3 , 150)\
a.free\
\
\cf2 //sine9 - modulators connected in chain\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "sine9"\cf3 , \{\cf4 |freq= 680, phaseFreq= 500|\cf3 \
	\cf4 var\cf3  snd, snd2, snd3, snd4;\
	snd4= \cf4 SinOsc\cf3 .ar(phaseFreq+3)*2pi;\
	snd3= \cf4 SinOsc\cf3 .ar(phaseFreq+2, snd4)*2pi;\
	snd2= \cf4 SinOsc\cf3 .ar(phaseFreq+1, snd3)*2pi;\
	snd= \cf4 SinOsc\cf3 .ar(freq, snd2, 0.5);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, 0));\
\}).send(s);\
)\
\
a= \cf4 Synth\cf3 (\cf5 "sine9"\cf3 )\
a.set(\cf6 \\phaseFreq\cf3 , 50)\
a.set(\cf6 \\phaseFreq\cf3 , 150)\
a.free\
\
\cf2 //complex sounds from simple modulation with a couple of sine oscillators\cf3 \
\cf2 //sine10 - similar to 9 but with more arguments\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 "sine10"\cf3 , \{\cf4 |freq= 680, phaseFreq4= 1, phaseFreq3= 10, phaseFreq2= 23|\cf3 \
	\cf4 var\cf3  snd, snd2, snd3, snd4;\
	snd4= \cf4 SinOsc\cf3 .ar(phaseFreq4)*2pi;\
	snd3= \cf4 SinOsc\cf3 .ar(phaseFreq3, snd4)*2pi;\
	snd2= \cf4 SinOsc\cf3 .ar(phaseFreq2, snd3)*2pi;\
	snd= \cf4 SinOsc\cf3 .ar(freq, snd2, 0.5);\
	\cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(snd, 0));\
\}).send(s);\
)\
\
a= \cf4 Synth\cf3 (\cf5 "sine10"\cf3 )\
a.set(\cf6 \\phaseFreq2\cf3 , 0.5, \cf6 \\phaseFreq3\cf3 , 2.9 ,\cf6 \\phaseFreq4\cf3 , 4)\
a.set(\cf6 \\phaseFreq2\cf3 , 1.5, \cf6 \\phaseFreq3\cf3 , 50.9 ,\cf6 \\phaseFreq4\cf3 , 4)\
a.set(\cf6 \\freq\cf3 , 200, \cf6 \\phaseFreq2\cf3 , 33, \cf6 \\phaseFreq3\cf3 , 50.9 ,\cf6 \\phaseFreq4\cf3 , 40)\
a.set(\cf6 \\freq\cf3 , 800, \cf6 \\phaseFreq2\cf3 , 0.25, \cf6 \\phaseFreq3\cf3 , 1.9 ,\cf6 \\phaseFreq4\cf3 , 0.7)\
a.free\
\
\cf2 //compare sin(cnt/100)+sin(cnt/60) etc in the graphics\cf3 \
\cf2 //or sin(cnt/100 + (sin(cnt/60)*2pi)) for sort of phase mod\cf3 \
\
\
\
\cf2 //---------------------------\cf3 \
(\
\cf4 var\cf3  win, usr, cnt, phase;\
win= \cf4 Window\cf3 (\cf5 "circ6"\cf3 , \cf4 Rect\cf3 (100, 200, 500, 500));\
usr= \cf4 UserView\cf3 (win, \cf4 Rect\cf3 (0, 0, 500, 500));\
usr.background= \cf4 Color\cf3 .white;\
\
a= \{\cf4 Synth\cf3 (\cf5 "sine3"\cf3 )\}.dup(40);\
cnt= 0;\
usr.drawFunc= \{\
	\cf4 Pen\cf3 .width= 2;\
	\
	phase= cnt/30;	\cf2 //radians (0 to 2pi)\cf3 \
	40.do\{\cf4 |x|\cf3 \
		\cf4 Pen\cf3 .fillColor= \cf4 Color\cf3 .grey(1-(x/40), 0.3);\
		\cf4 Pen\cf3 .addOval(\cf4 Rect\cf3 (sin(phase+(x*0.1))*75+150, cos(phase+(x*0.4))*50+150, x*5+50, x*10+10));\
		a[cnt%40].set(\cf6 \\freq\cf3 , sin(phase+(x*0.1))*75+500);\
		\cf4 Pen\cf3 .fill;\
	\};\
	cnt= cnt+1;\
\};\
\
win.front;\
\cf4 Routine\cf3 (\{while(\{win.isClosed.not\}, \{usr.refresh; (1/30).wait\})\}).play(\cf4 AppClock\cf3 );\
)\
}
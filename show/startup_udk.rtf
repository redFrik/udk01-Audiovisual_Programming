{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 //script to show pieces/sketches /f0\cf0 \
\cf2 //stop with cmd+.\cf0 \
//
\f1\fs24 udk-audiovisuals show_script2
\f0\fs18 \
\
(\
Document.listener.bounds_(Rect(300, 5, 565, 250));\
Document.listener.font_(Font("Monaco", 12));\
\
\
s.waitForBoot\{\
\
	\cf2 //--settings\cf0 \
	\cf3 var\cf0  path= \cf4 "~/udk_sc/*"\cf0 ;				\cf2 //folder with pieces to run\cf0 \
	\cf3 var\cf0  defaultTime= 60;				\cf2 //duration per piece in seconds\cf0 \
	\cf3 var\cf0  bounds= \cf3 Rect\cf0 (500, 60, 800, 800);	\cf2 //document position and size\cf0 \
	\cf3 var\cf0  fixedTimes= [					\cf2 //array of filenames that needs a fixed duration\cf0 \
		\cf4 "andre_1001.rtf"\cf0  -> 240			\cf2 //filename, seconds\cf0 \
	];\
	\
	\cf2 //--loop\cf0 \
	\cf3 Task\cf0 (\{\
		\cf3 var\cf0  time;\
		\cf3 var\cf0  files= path.standardizePath.pathMatch.scramble;\
		files.printcsAll;\
		"".postln; \
		\
		\cf3 inf\cf0 .do\{\cf3 |i|\cf0 \
			\
			\cf2 //--load\cf0 \
			\cf3 var\cf0  doc= \cf3 Document\cf0 .open(files.wrapAt(i));\
			var string = doc.string;\
			var lineStarts = List.new;\
			doc.bounds= bounds;\
			(\cf3 Date\cf0 .localtime.asString+doc.name).postln;\
			1.wait;\
			doc.selectRange(0, string.size);\
			2.wait;\
			\
			string.do \{ |char, i| if (char == $\\n) \{ lineStarts.add(i) \} \};\
			// lineStarts.postln;\
			\
			\cf2 //--run\cf0 \
			string.interpret;\
			doc.selectRange(0, 0);\
			\
			\cf2 //--time\cf0 \
			time= defaultTime;\
			fixedTimes.do\{\cf3 |x|\cf0 \
				doc.path.basename;\
				if(x.key==doc.path.basename, \{\
					time= x.value;\
				\});\
			\};\
			(\cf4 "	time: "\cf0 +time).postln;\
			time.wait;\
			\
			\cf2 //--stop\cf0 \
			\cf3 thisProcess\cf0 .stop;\
			\cf3 Window\cf0 .allWindows.reject\{\cf3 |x|\cf0  x.name.contains(\cf4 " server"\cf0 )\}.do\{\cf3 |x|\cf0  x.close\};\
			doc.close;\
			0.5.wait;\
		\}\
	\}).play(\cf3 AppClock\cf0 );\
\};\
)\
}